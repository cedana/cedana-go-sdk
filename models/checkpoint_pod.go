// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type CheckpointPod struct {
    // The action_id property
    action_id *string
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The cluster_id property
    cluster_id *string
    // The namespace property
    namespace *string
    // The pod_name property
    pod_name *string
    // The runc_root property
    runc_root *string
}
// NewCheckpointPod instantiates a new CheckpointPod and sets the default values.
func NewCheckpointPod()(*CheckpointPod) {
    m := &CheckpointPod{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateCheckpointPodFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateCheckpointPodFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewCheckpointPod(), nil
}
// GetActionId gets the action_id property value. The action_id property
// returns a *string when successful
func (m *CheckpointPod) GetActionId()(*string) {
    return m.action_id
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *CheckpointPod) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetClusterId gets the cluster_id property value. The cluster_id property
// returns a *string when successful
func (m *CheckpointPod) GetClusterId()(*string) {
    return m.cluster_id
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *CheckpointPod) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["action_id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetActionId(val)
        }
        return nil
    }
    res["cluster_id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetClusterId(val)
        }
        return nil
    }
    res["namespace"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetNamespace(val)
        }
        return nil
    }
    res["pod_name"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetPodName(val)
        }
        return nil
    }
    res["runc_root"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetRuncRoot(val)
        }
        return nil
    }
    return res
}
// GetNamespace gets the namespace property value. The namespace property
// returns a *string when successful
func (m *CheckpointPod) GetNamespace()(*string) {
    return m.namespace
}
// GetPodName gets the pod_name property value. The pod_name property
// returns a *string when successful
func (m *CheckpointPod) GetPodName()(*string) {
    return m.pod_name
}
// GetRuncRoot gets the runc_root property value. The runc_root property
// returns a *string when successful
func (m *CheckpointPod) GetRuncRoot()(*string) {
    return m.runc_root
}
// Serialize serializes information the current object
func (m *CheckpointPod) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteStringValue("cluster_id", m.GetClusterId())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("namespace", m.GetNamespace())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("pod_name", m.GetPodName())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("runc_root", m.GetRuncRoot())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetActionId sets the action_id property value. The action_id property
func (m *CheckpointPod) SetActionId(value *string)() {
    m.action_id = value
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *CheckpointPod) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetClusterId sets the cluster_id property value. The cluster_id property
func (m *CheckpointPod) SetClusterId(value *string)() {
    m.cluster_id = value
}
// SetNamespace sets the namespace property value. The namespace property
func (m *CheckpointPod) SetNamespace(value *string)() {
    m.namespace = value
}
// SetPodName sets the pod_name property value. The pod_name property
func (m *CheckpointPod) SetPodName(value *string)() {
    m.pod_name = value
}
// SetRuncRoot sets the runc_root property value. The runc_root property
func (m *CheckpointPod) SetRuncRoot(value *string)() {
    m.runc_root = value
}
type CheckpointPodable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetActionId()(*string)
    GetClusterId()(*string)
    GetNamespace()(*string)
    GetPodName()(*string)
    GetRuncRoot()(*string)
    SetActionId(value *string)()
    SetClusterId(value *string)()
    SetNamespace(value *string)()
    SetPodName(value *string)()
    SetRuncRoot(value *string)()
}
