// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
type CheckpointKind int

const (
    SIMPLE_CHECKPOINTKIND CheckpointKind = iota
    ROOTFS_CHECKPOINTKIND
)

func (i CheckpointKind) String() string {
    return []string{"simple", "rootfs"}[i]
}
func ParseCheckpointKind(v string) (any, error) {
    result := SIMPLE_CHECKPOINTKIND
    switch v {
        case "simple":
            result = SIMPLE_CHECKPOINTKIND
        case "rootfs":
            result = ROOTFS_CHECKPOINTKIND
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeCheckpointKind(values []CheckpointKind) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i CheckpointKind) isMultiValue() bool {
    return false
}
