{
  "openapi": "3.1.0",
  "info": {
    "title": "cedana-propagator",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.5.0"
  },
  "paths": {
    "/v2/checkpoint/pod": {
      "post": {
        "summary": "Checkpoint a Pod and store related checkpoints",
        "operationId": "checkpoint_pod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckpointPod"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the checkpoint id for the new checkpoint",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<uuid-v4-here>"
              }
            }
          },
          "404": {
            "description": "Failed create checkpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Failed to connect/fetch from jobs table from database",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v2/checkpoints": {
      "get": {
        "tags": [
          "cedana_checkpoints"
        ],
        "summary": "List Checkpoints",
        "description": "Use query params to filter checkpoints",
        "operationId": "list",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns checkpoints",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Checkpoint"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to connect/fetch from database",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "cedana_checkpoints"
        ],
        "summary": "Create Checkpoint",
        "description": "Builds a new checkpoint without the metadata and information about the checkpoint with status initializing",
        "operationId": "add",
        "responses": {
          "200": {
            "description": "Returns the checkpoint id for the new checkpoint",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<uuid-v4-here>"
              }
            }
          },
          "404": {
            "description": "Failed create checkpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Failed to connect/fetch from jobs table from database",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v2/checkpoints/deprecate/{id}": {
      "patch": {
        "tags": [
          "cedana_checkpoints"
        ],
        "summary": "Deprecate Checkpoint",
        "description": "Marks checkpoint as deprecated, so that they can be removed on next internal state cleanup. Checkpoints marked deprecated are removed within a fixed number of days depending on our customer service agreement.\n\nNote: Checkpoints can't directly be deleted as use them as versioning points and might be required for restores that might be in-flight\nsetting them deprecated marks them to be cleaned up as soon as possible(likely within a day).",
        "operationId": "deprecate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deprecated checkpoint and returns id",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<uuid-for-checkpoint>"
              }
            }
          },
          "404": {
            "description": "Failed to find checkpoint from id"
          },
          "500": {
            "description": "Failed to connect/execute request against db"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v2/checkpoints/download/{id}": {
      "get": {
        "tags": [
          "cedana_checkpoints"
        ],
        "summary": "Download Checkpoint Content",
        "description": "Get the URL to download checkpoint from",
        "operationId": "download",
        "responses": {
          "200": {
            "description": "Returns the url, to download the checkpoint from",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<presigned-bucket-url-for-downloading-checkpoint-tar>"
              }
            }
          },
          "404": {
            "description": "Failed to find checkpoint from id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Failed to connect/execute request against db",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v2/checkpoints/info/{id}": {
      "put": {
        "tags": [
          "cedana_checkpoints"
        ],
        "summary": "Put Checkpoint Info",
        "description": "Add information about the checkpointed pod and runtime",
        "operationId": "update_info",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckpointInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully deprecated checkpoint and returns id",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<uuid-for-checkpoint>"
              }
            }
          },
          "404": {
            "description": "Failed to find checkpoint from id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Failed to connect/execute request against db",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v2/checkpoints/upload/{id}": {
      "patch": {
        "tags": [
          "cedana_checkpoints"
        ],
        "summary": "Upload Checkpoint Content",
        "description": "Provides pre-signed URL to upload checkpoint to, based on checkpoint id and org configuration",
        "operationId": "upload",
        "responses": {
          "200": {
            "description": "Returns the url, to upload the checkpoint to",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<presigned-bucket-url-for-uploading-checkpoint-tar>"
              }
            }
          },
          "404": {
            "description": "Failed to find checkpoint from id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Failed to connect/execute request against db",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v2/jobs": {
      "get": {
        "tags": [
          "cedana_jobs"
        ],
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Returns list of jobs from db",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                },
                "example": [
                  {
                    "jid": "xenodochial_jones4",
                    "type": "containerd"
                  },
                  {
                    "jid": "dreamy_nobel1",
                    "type": "containerd"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Failed to connect/fetch from jobs table from database"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v2/user": {
      "get": {
        "tags": [
          "cedana"
        ],
        "operationId": "get_user",
        "responses": {
          "200": {
            "description": "Returns your `user-id` (a uuid)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Key/Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "404": {
            "description": "User not attached to valid api key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Checkpoint": {
        "type": "object",
        "description": "Checkpoint is basic unit for cedana service operation\nit stores all the information regarding the snapshot we can use to save and then restore state",
        "required": [
          "id",
          "status",
          "org_id"
        ],
        "properties": {
          "checksum": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "org_id": {
            "type": "string",
            "format": "uuid"
          },
          "process_info": {
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "$ref": "#/components/schemas/CheckpointStatus"
          }
        }
      },
      "CheckpointInfo": {
        "type": "object",
        "required": [
          "gpu",
          "platform"
        ],
        "properties": {
          "gpu": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          }
        }
      },
      "CheckpointPod": {
        "type": "object",
        "required": [
          "pod_name",
          "runc_root",
          "namespace",
          "cluster_id"
        ],
        "properties": {
          "action_id": {
            "type": [
              "string",
              "null"
            ],
            "readOnly": true
          },
          "cluster_id": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "pod_name": {
            "type": "string"
          },
          "runc_root": {
            "type": "string"
          }
        }
      },
      "CheckpointStatus": {
        "type": "string",
        "enum": [
          "initializing",
          "updated_info",
          "possibly_uploaded",
          "ready",
          "deprecated"
        ]
      },
      "HttpError": {
        "type": "object",
        "required": [
          "message",
          "cedana_error_code"
        ],
        "properties": {
          "cedana_error_code": {
            "type": "integer",
            "minimum": 0
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Job": {
        "type": "object",
        "required": [
          "jid",
          "type"
        ],
        "properties": {
          "jid": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "cedana",
      "description": "Cedana Propagator API for managing workloads, and our checkpoints across clusters/workspaces"
    },
    {
      "name": "cedana_jobs",
      "description": "Cedana Propagator API for dealing with job(s)"
    },
    {
      "name": "cedana_checkpoints",
      "description": "Cedana Propagator API for dealing with checkpoint(s)"
    }
  ]
}
